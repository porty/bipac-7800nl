/****************************************************************************
 *
 * AdslMib.gh 
 *
 * Description:
 *	This is a header file which defines the type for AdslMib
 *	global variable structure.
 *
 *
 * Copyright (c) 1993-1998 AltoCom, Inc. All rights reserved.
 * Authors: Ilya Stomakhin
 *
 * $Revision: 1.8 $
 *
 * $Id: AdslMib.gh,v 1.8 2004/06/04 18:56:01 ilyas Exp $
 *
 * $Log: AdslMib.gh,v $
 * Revision 1.8  2004/06/04 18:56:01  ilyas
 * Added counter for ADSL2 framing and performance
 *
 * Revision 1.7  2003/10/17 21:02:12  ilyas
 * Added more data for ADSL2
 *
 * Revision 1.6  2003/10/14 00:55:27  ilyas
 * Added UAS, LOSS, SES error seconds counters.
 * Support for 512 tones (AnnexI)
 *
 * Revision 1.5  2003/07/18 19:07:15  ilyas
 * Merged with ADSL driver
 *
 * Revision 1.4  2002/11/13 21:32:49  ilyas
 * Added adjustK support for Centillium non-standard framing mode
 *
 * Revision 1.3  2002/10/31 20:27:13  ilyas
 * Merged with the latest changes for VxWorks/Linux driver
 *
 * Revision 1.2  2002/07/20 00:51:41  ilyas
 * Merged witchanges made for VxWorks/Linux driver.
 *
 * Revision 1.1  2001/12/21 22:39:30  ilyas
 * Added support for ADSL MIB data objects (RFC2662)
 *
 *
 *****************************************************************************/

#ifndef	AdslMibGlobals
#define	AdslMibGlobals

#include "AdslMib.h"

typedef struct
	{
	/* MIB data */

	adslMibInfo				adslMib;
	/*command handler */
	dslCommandHandlerType	cmdHandlerPtr;
	/* ADSL state data */

	adslMibNotifyHandlerType notifyHandlerPtr;
	ulong					txShowtimeTime;
	ulong					timeSec;
	ulong					timeMs;
	ulong					timeConStarted;
	Boolean					currSecondErrored;
	Boolean					currSecondLOS;
	Boolean					currSecondSES;
	Boolean					currSecondFEC;
	Boolean					currSecondLCD;
	Boolean					vendorIdReceived;
	ulong					rcvPower;
	ulong					rcvRateBps;
	ulong					xmtRateBps;
	ulong					linkStatus;
	union {
		G992CodingParams		rcvParams;
		G992CodingParams		rcvParams2lp[MAX_LP_NUM];
	};
	union {
		G992CodingParams		xmtParams;
		G992CodingParams		xmtParams2lp[MAX_LP_NUM];
	};
	union {
		ulong				shtCounters[kG992ShowtimeNumOfMonitorCounters];
		ulong				shtCounters2lp[MAX_LP_NUM][kG992ShowtimeNumOfMonitorCounters];
	};
	union {
		ulong				shtExtCounters[kG992ShowtimeNumOfExtendedMonitorCounters];
		ulong				shtExtCounters2lp[MAX_LP_NUM][kG992ShowtimeNumOfExtendedMonitorCounters];
	};
	ulong					scratchData;
	long					showtimeMarginThld;

	/* ADSL diag data */
	short					*snr;
	short					*showtimeMargin;
	uchar					*bitAlloc;
	short					*gain;
	ComplexShort			*chanCharLin;
	short					*chanCharLog;
	short					*quietLineNoise;
	ushort					nTones;
	uchar					nMsgCnt;
	ulong					g992MsgType;
	uchar					rsOption[1+4];
	Boolean					rsOptionValid;
	
	/* Non-linear detection data */
	short 					distNoisedB[kAdslMibToneNum*2];

	/* PLN data */
	short			PLNDurationBins[kPlnNumberOfDurationBins]; 
	short			PLNIntrArvlBins[kPlnNumberOfInterArrivalBins];
#ifdef ADSL_MIBOBJ_PLN
	short			PLNValueps[kAdslMibToneNum*2-32];
	short			PLNThldCntps[kAdslMibToneNum*2-32];
#endif
	ulong			PLNDurationHist[kPlnNumberOfDurationBins];
	ulong			PLNIntrArvlHist[kPlnNumberOfInterArrivalBins];
	char			pathId;
	long			secElapsedShTm;
	union {
		long		per;
		long		per2lp[MAX_LP_NUM];
	};
	union {
		long		rsRate;
		long		rsRate2lp[MAX_LP_NUM];
	};
	int			txUpdateStatFlag;
	int			txCntReceived;
	ulong		PERpDS[MAX_LP_NUM];
#ifdef CONFIG_BCM96368
	int		waitBandPlan;
	int		waitfirstQLNstatusLD;
	int		waitfirstHLOGstatusLD;
	int		waitfirstSNRstatusLD;
	int		waitfirstSNRstatusMedley;
	unsigned long			bandPlanType;
	bandPlanDescriptor		*bpSNR;
	bandPlanDescriptor		*dsBpHlogForReport;
	bandPlanDescriptor		*dsBpQLNForReport;
	bandPlanDescriptor		*dsBpSNRForReport;
	Boolean actualgFactorForToneGroupObjects;
	char		scratchObject[kVdslMibMaxToneNum];
#endif
	}
	adslMibVarsStruct;

#endif	/* AdslMibGlobals */




